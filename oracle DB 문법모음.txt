<계정생성 사용형식>
 	CREATE USER <사용자명> IDENTIFIED BY <패스워드>;
<권한설정 사용형식>
	 GRANT <권한명, 권한명, ....> TO <사용자 이름>;

<테이블 생성 사용형식>
	CREATE TABLE <테이블명> (
		<컬럼명> <데이터 타입>[(크기)] [NOT NULL | NULL] [DEFAULT 값],
		<컬럼명> <데이터 타입>[(크기)] [NOT NULL | NULL] [DEFAULT 값],
		.....
		<컬럼명> <데이터 타입>[(크기)] [NOT NULL | NULL] [DEFAULT 값],

		[CONSTRAINT <기본키설정명> PRIMARY KEY (컬럼명 [, 컬럼명..])],
		[CONSTRAINT <외래키설정명> FOREIGN KEY (컬럼명 [. 컬럼명..]),
			REFRERENCES 외부테이블명(컬럼명))]

<테이블명 수정 사용형식>
	ALTER TABLE <대상 테이블명> RENAME TO <새로운 테이블명>

<컬럼추가 사용형식>
	ALTER TABLE <대상 테이블명>
		ADD <컬럼명> <데이터 타입>[(크기)] [NOT NULL | NULL] [DEFUALT 값],
		..... (복수개 추가의 경우 ADD 생략가능)

<컬럼변경 사용형식>
	ALTER TABLE <대상 테이블명>
		MODIFY <컬럼명> <데이터 타입>[(크기)] [NOT NULL | NULL] [DEFUALT 값],
		..... (복수개 추가의 경우 MODIFY 생략가능)

<컬럼명 변경 사용형식>
	ALTER TABLE <대상 테이블명> RENAME COLUMN <대상 컬럼명> TO <새로운 컬럼명>

<컬럼삭제 사용형식>
	ALTER TABLE <대상 테이블명> DROP COLUMN <컬럼명>

<제약조건 추가 사용형식>
	ALTER TABLE <대상 테이블명>
		ADD CONSTRAINT <기본키설정명> PRIMARY KEY(컬럼명 [,컬럼명...]),
		[CONSTRAINT <외래키설정명> FOREIGN KEY(컬럼명 [,컬럼명...])
			REFERENCES 외부테이블명(컬럼명)];

<제약조건 수정 사용형식>
	ALTER TABLE <대상 테이블명>
		MODIFY CONSTRAINT <기본키설정명> PRIMARY KEY(컬럼명 [, 컬럼명...]),
		[CONSTRAINT <외래키설정명> FOREIGN KEY(컬럼명 [,컬럼명...])
			REFERENCES 외부테이블명(컬럼명)];

<제약조건 삭제 사용형식>
	DROP CONSTRAINT <기본키설정명>|<외래키설정명>;
		
<테이블에 자료 삽입 사용형식>
	INSERT INTO <테이블명> [(컬럼명[,컬럼명...])]
		VALUES(값1, [, 값2 ....]))

<UPDATE 사용형식>
	UPDATE <테이블명>
	SET <컬럼명 = 값>,
	....
	[WHERE 조건];
	//조건절을 생략하면 테이블의 모든 행에 존재하는 컬럼을 새로운 값으로 변경한다.

<SELECT 사용형식>
	 SELECT <컬럼명> [AS <별칭>],
		....
	 FROM <테이블명>
	[WHERE 조건]
	//컬럼명을 *로 표기할경우 모든 컬럼을 조회한다.

<DELETE 사용형식>
	DELETE <테이블명>
	[WHERE 조건]
	//조건절을 생략하면 테이블에 존재하는 모든 행을 삭제하고 테이블 자체만 남겨놓는다.

<문자열 타입>
	CHAR : <컬럼명> CHAR(크기 [BYTE | CHAR]
	VARCHAR2 : <컬럼명> VARCHAR2(크기 [BYTE | CHAR])
	VARCHAR : VARCHAR2와 동일
	LONG : <컬럼명> LONG (최대 2GB)
	CLOB : <컬럼명> CLOB (최대 4GB)

<DBMS_LOB API>
	DBMS_LOB.SURSTR(컬럼명, 종료인덱스, 시작인덱스) : 해당 컬럼의 시작인덱스 ~ 종료인덱스 까지의 문자반환
	DBMS_LOB.GETLENGTH(컬럼명) : 해당 컬럼의 문자열 길이반환
	LENGTH(컬럼명) : 글자수가 많지 않을경우 사용